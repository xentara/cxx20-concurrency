30,31c30,31
< #ifndef _GLIBCXX_ATOMIC_TIMED_WAIT_H
< #define _GLIBCXX_ATOMIC_TIMED_WAIT_H 1
---
> #ifndef CXX20_CONCURRENCY_ATOMIC_TIMED_WAIT_H
> #define CXX20_CONCURRENCY_ATOMIC_TIMED_WAIT_H 1
33c33
< #pragma GCC system_header
---
> #include <bits/c++20-concurrency/global.h>
35c35
< #include <bits/atomic_wait.h>
---
> #include <bits/c++20-concurrency/atomic_wait.h>
37c37
< #if __cpp_lib_atomic_wait
---
> #ifdef CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
39c39
< #include <bits/this_thread_sleep.h>
---
> #include <bits/c++20-concurrency/this_thread_sleep.h>
48c48
< namespace std _GLIBCXX_VISIBILITY(default)
---
> namespace std CXX20_CONCURRENCY_VISIBILITY_ATTRIBUTE
50d49
< _GLIBCXX_BEGIN_NAMESPACE_VERSION
52c51,54
<   namespace __detail
---
> inline namespace CXX20_CONCURRENCY_NAMESPACE
> {
> 
>   namespace CXX20_CONCURRENCY_DECORATE_NAME(__detail)
77c79
< #define _GLIBCXX_HAVE_PLATFORM_TIMED_WAIT
---
> #define CXX20_CONCURRENCY_HAVE_PLATFORM_TIMED_WAIT
137c139
< // define _GLIBCXX_HAVE_PLATFORM_TIMED_WAIT and implement __platform_wait_until()
---
> // define CXX20_CONCURRENCY_HAVE_PLATFORM_TIMED_WAIT and implement __platform_wait_until()
178c180
< 	  return __detail::__cond_wait_until_impl(__cv, __mx, __atime);
---
> 	  return CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__cond_wait_until_impl(__cv, __mx, __atime);
182c184
< 	  return __detail::__cond_wait_until_impl(__cv, __mx, __atime);
---
> 	  return CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__cond_wait_until_impl(__cv, __mx, __atime);
206c208
< #ifdef _GLIBCXX_HAVE_PLATFORM_TIMED_WAIT
---
> #ifdef CXX20_CONCURRENCY_HAVE_PLATFORM_TIMED_WAIT
218c220
< #endif // _GLIBCXX_HAVE_PLATFORM_TIMED_WAIT
---
> #endif // CXX20_CONCURRENCY_HAVE_PLATFORM_TIMED_WAIT
247c249
< 	    this_thread::sleep_for(64ms);
---
> 	    CXX20_CONCURRENCY_DECORATE_NAME(this_thread)::sleep_for(64ms);
251c253
< 	    this_thread::sleep_for(__elapsed / 2);
---
> 	    CXX20_CONCURRENCY_DECORATE_NAME(this_thread)::sleep_for(__elapsed / 2);
389c391
<       __detail::__enters_timed_wait __w{__addr};
---
>       CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__enters_timed_wait __w{__addr};
400c402
<       __detail::__enters_timed_wait __w{__addr};
---
>       CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__enters_timed_wait __w{__addr};
407c409
<     __atomic_wait_address_until_bare(const __detail::__platform_wait_t* __addr,
---
>     __atomic_wait_address_until_bare(const CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__platform_wait_t* __addr,
412c414
<       __detail::__bare_timed_wait __w{__addr};
---
>       CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__bare_timed_wait __w{__addr};
422c424
<       __detail::__enters_timed_wait __w{__addr};
---
>       CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__enters_timed_wait __w{__addr};
433c435
<       __detail::__enters_timed_wait __w{__addr};
---
>       CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__enters_timed_wait __w{__addr};
440c442
<     __atomic_wait_address_for_bare(const __detail::__platform_wait_t* __addr,
---
>     __atomic_wait_address_for_bare(const CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__platform_wait_t* __addr,
444c446
<       __detail::__bare_timed_wait __w{__addr};
---
>       CXX20_CONCURRENCY_DECORATE_NAME(__detail)::__bare_timed_wait __w{__addr};
447c449
< _GLIBCXX_END_NAMESPACE_VERSION
---
> } // namespace CXX20_CONCURRENCY_NAMESPACE
449,450c451,452
< #endif // __cpp_lib_atomic_wait
< #endif // _GLIBCXX_ATOMIC_TIMED_WAIT_H
---
> #endif // CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
> #endif // CXX20_CONCURRENCY_ATOMIC_TIMED_WAIT_H
