29,31c29,30
< /** @file include/barrier
<  *  This is a Standard C++ Library header.
<  */
---
> #ifndef CXX20_BARRIER_H
> #define CXX20_BARRIER_H 1
33,34c32
< #ifndef _GLIBCXX_BARRIER
< #define _GLIBCXX_BARRIER 1
---
> #include <version>
36c34,40
< #pragma GCC system_header
---
> #if __cplusplus < 202002L
> #   error c++20-barrier.h requires C++20
> #endif
> 
> #if defined __GLIBCXX__ && !defined __cpp_lib_barrier
> 
> #include <bits/c++20-concurrency/global.h>
38d41
< #if __cplusplus > 201703L
40,41c43,44
< #if __cpp_lib_atomic_wait && __cpp_aligned_new
< #include <bits/std_thread.h>
---
> #if defined CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT && __cpp_aligned_new
> #include <bits/c++20-concurrency/std_thread.h>
42a46
> #include <bits/c++20-concurrency/atomic_wait.h>
46c50,51
< #define __cpp_lib_barrier 201907L
---
> namespace std CXX20_CONCURRENCY_VISIBILITY_ATTRIBUTE
> {
48c53
< namespace std _GLIBCXX_VISIBILITY(default)
---
> inline namespace CXX20_CONCURRENCY_NAMESPACE
50d54
< _GLIBCXX_BEGIN_NAMESPACE_VERSION
164,165c168,169
< 	std::hash<std::thread::id> __hasher;
< 	size_t __current = __hasher(std::this_thread::get_id());
---
> 	std::hash<std::CXX20_CONCURRENCY_DECORATE_NAME(thread)::id> __hasher;
> 	size_t __current = __hasher(std::CXX20_CONCURRENCY_DECORATE_NAME(this_thread)::get_id());
178c182
< 		__phase.notify_all();
---
> 		__atomic_notify_address(&_M_phase, true);
255,259c259,263
< _GLIBCXX_END_NAMESPACE_VERSION
< } // namespace
< #endif // __cpp_lib_atomic_wait && __cpp_aligned_new
< #endif // __cplusplus > 201703L
< #endif // _GLIBCXX_BARRIER
---
> } // namespace CXX20_CONCURRENCY_NAMESPACE
> } // namespace std
> #endif // CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT && __cpp_aligned_new
> #endif // __GLIBCXX__ && !defined __cpp_lib_barrier
> #endif // CXX20_BARRIER_H
