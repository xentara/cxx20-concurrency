30,31c30,31
< #ifndef _GLIBCXX_SEMAPHORE_BASE_H
< #define _GLIBCXX_SEMAPHORE_BASE_H 1
---
> #ifndef CXX20_CONCURRENCY_SEMAPHORE_BASE_H
> #define CXX20_CONCURRENCY_SEMAPHORE_BASE_H 1
33c33
< #pragma GCC system_header
---
> #include <bits/c++20-concurrency/global.h>
36,37c36,37
< #if __cpp_lib_atomic_wait
< #include <bits/atomic_timed_wait.h>
---
> #ifdef CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
> #include <bits/c++20-concurrency/atomic_timed_wait.h>
39c39
< #endif // __cpp_lib_atomic_wait
---
> #endif // CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
41c41
< #ifdef _GLIBCXX_HAVE_POSIX_SEMAPHORE
---
> #ifdef CXX20_CONCURRENCY_HAVE_POSIX_SEMAPHORE
51c51,54
< namespace std _GLIBCXX_VISIBILITY(default)
---
> namespace std CXX20_CONCURRENCY_VISIBILITY_ATTRIBUTE
> {
>     
> inline namespace CXX20_CONCURRENCY_NAMESPACE
53d55
< _GLIBCXX_BEGIN_NAMESPACE_VERSION
55c57
< #ifdef _GLIBCXX_HAVE_POSIX_SEMAPHORE
---
> #ifdef CXX20_CONCURRENCY_HAVE_POSIX_SEMAPHORE
185c187
< #endif // _GLIBCXX_HAVE_POSIX_SEMAPHORE
---
> #endif // CXX20_CONCURRENCY_HAVE_POSIX_SEMAPHORE
187c189
< #if __cpp_lib_atomic_wait
---
> #ifdef CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
191c193
<     explicit __atomic_semaphore(__detail::__platform_wait_t __count) noexcept
---
>     explicit __atomic_semaphore(CXX20_CONCURRENCY_DETAIL_NAMESPACE::__platform_wait_t __count) noexcept
201c203
<     _S_do_try_acquire(__detail::__platform_wait_t* __counter) noexcept
---
>     _S_do_try_acquire(CXX20_CONCURRENCY_DETAIL_NAMESPACE::__platform_wait_t* __counter) noexcept
226c228
<       return std::__detail::__atomic_spin(__pred);
---
>       return std::CXX20_CONCURRENCY_DETAIL_NAMESPACE::__atomic_spin(__pred);
265,266c267,268
<     alignas(__detail::__platform_wait_alignment)
<     __detail::__platform_wait_t _M_counter;
---
>     alignas(CXX20_CONCURRENCY_DETAIL_NAMESPACE::__platform_wait_alignment)
>     CXX20_CONCURRENCY_DETAIL_NAMESPACE::__platform_wait_t _M_counter;
268c270
< #endif // __cpp_lib_atomic_wait
---
> #endif // CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
272c274
< #if defined __cpp_lib_atomic_wait && !_GLIBCXX_USE_POSIX_SEMAPHORE
---
> #if defined CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT && !_GLIBCXX_USE_POSIX_SEMAPHORE
274c276
< #elif _GLIBCXX_HAVE_POSIX_SEMAPHORE
---
> #elif CXX20_CONCURRENCY_HAVE_POSIX_SEMAPHORE
278c280
< _GLIBCXX_END_NAMESPACE_VERSION
---
> } // namespace CXX20_CONCURRENCY_NAMESPACE
280c282
< #endif // _GLIBCXX_SEMAPHORE_BASE_H
---
> #endif // CXX20_CONCURRENCY_SEMAPHORE_BASE_H
