// Copyright (C) embedded ocean GmbH, Munich, Germany.
//
// This file is part of the Charconv Float Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// Under Section 7 of GPL version 3, you are granted additional
// permissions described in the GCC Runtime Library Exception, version
// 3.1, as published by the Free Software Foundation.

// You should have received a copy of the GNU General Public License and
// a copy of the GCC Runtime Library Exception along with this program;
// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
// <http://www.gnu.org/licenses/>.

#ifndef CXX20_CONCURRENCY_CONFIG_H
#define CXX20_CONCURRENCY_CONFIG_H

// whether we have posix semaphores
#cmakedefine CXX20_CONCURRENCY_HAVE_POSIX_SEMAPHORE 1

// whether we have FUTEX_PRIVATE_FLAG
#cmakedefine CXX20_CONCURRENCY_HAVE_LINUX_FUTEX_PRIVATE 1

// the inline namespace used for the types
#define CXX20_CONCURRENCY_NAMESPACE @CXX20_CONCURRENCY_NAMESPACE@

// the ELF visibility used for the namespace
#define CXX20_CONCURRENCY_VISIBILITY @CXX20_CONCURRENCY_VISIBILITY@

#include <bits/c++config.h>

// whether we have atomic wake support
#if _GLIBCXX_HAS_GTHREADS || _GLIBCXX_HAVE_LINUX_FUTEX
#	define CXX20_CONCURRENCY_HAVE_ATOMIC_WAIT
#endif

#endif // CXX20_CONCURRENCY_CONFIG_H
